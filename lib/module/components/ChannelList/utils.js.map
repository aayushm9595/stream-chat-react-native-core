{"version":3,"sources":["utils.ts"],"names":["moveChannelUp","cid","channels","index","findIndex","c","channel","splice","unshift","getChannel","client","id","type","watch","DEFAULT_QUERY_CHANNELS_LIMIT","MAX_QUERY_CHANNELS_LIMIT"],"mappings":";;;;;;;;;;;;;AA0BO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAWqB;AAAA,MAFhDC,GAEgD,QAFhDA,GAEgD;AAAA,2BADhDC,QACgD;AAAA,MADhDA,QACgD,8BADrC,EACqC;AAEhD,MAAMC,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAmB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACJ,GAAF,KAAUA,GAAjB;AAAA,GAAnB,CAAd;AACA,MAAIE,KAAK,IAAI,CAAb,EAAgB,OAAOD,QAAP;AAChB,MAAMI,OAAO,GAAGJ,QAAQ,CAACC,KAAD,CAAxB;AAGAD,EAAAA,QAAQ,CAACK,MAAT,CAAgBJ,KAAhB,EAAuB,CAAvB;AACAD,EAAAA,QAAQ,CAACM,OAAT,CAAiBF,OAAjB;AAEA,6CAAWJ,QAAX;AACD,CAtBM;;;;AAsCA,IAAMO,UAAU;AAAA,8EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AASxBC,YAAAA,MATwB,SASxBA,MATwB,EAUxBC,EAVwB,SAUxBA,EAVwB,EAWxBC,IAXwB,SAWxBA,IAXwB;AAalBN,YAAAA,OAbkB,GAaRI,MAAM,CAACJ,OAAP,CAAeM,IAAf,EAAqBD,EAArB,CAbQ;AAAA;AAAA,mBAclBL,OAAO,CAACO,KAAR,EAdkB;;AAAA;AAAA,6CAejBP,OAfiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVG,UAAU;AAAA;AAAA;AAAA,GAAhB;;;AAkBA,IAAMK,4BAA4B,GAAG,EAArC;;AACA,IAAMC,wBAAwB,GAAG,EAAjC","sourcesContent":["import type { Channel, StreamChat } from 'stream-chat';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\ntype MoveParameters<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n> = {\n  channels: Channel<At, Ch, Co, Ev, Me, Re, Us>[];\n  cid: string;\n};\n\nexport const moveChannelUp = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>({\n  cid,\n  channels = [],\n}: MoveParameters<At, Ch, Co, Ev, Me, Re, Us>) => {\n  // get channel from channels\n  const index = channels.findIndex((c) => c.cid === cid);\n  if (index <= 0) return channels;\n  const channel = channels[index];\n\n  // remove channel from current position and add to start\n  channels.splice(index, 1);\n  channels.unshift(channel);\n\n  return [...channels];\n};\n\ntype GetParameters<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n> = {\n  client: StreamChat<At, Ch, Co, Ev, Me, Re, Us>;\n  id: string;\n  type: string;\n};\n\nexport const getChannel = async <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>({\n  client,\n  id,\n  type,\n}: GetParameters<At, Ch, Co, Ev, Me, Re, Us>) => {\n  const channel = client.channel(type, id);\n  await channel.watch();\n  return channel;\n};\n\nexport const DEFAULT_QUERY_CHANNELS_LIMIT = 10;\nexport const MAX_QUERY_CHANNELS_LIMIT = 30;\n"]}