{"version":3,"sources":["Gallery.tsx"],"names":["Single","styled","TouchableOpacity","alignment","theme","message","gallery","width","single","css","GalleryContainer","View","length","doubleSize","halfSize","size","galleryContainer","ImageContainer","imageContainer","HeaderContainer","header","container","HeaderButton","button","GalleryHeader","handleDismiss","StatusBar","setHidden","Gallery","props","images","additionalTouchableProps","onLongPress","t","viewerModalImageIndex","setViewerModalImageIndex","viewerModalOpen","setViewerModalOpen","immutableGalleryImages","reduce","returnArray","currentImage","url","image_url","thumb_url","push","galleryImages","forEach","image","galleryImage","asMutable","uri","flex","slice","map","i","opacity","StyleSheet","absoluteFillObject","alignItems","justifyContent","backgroundColor","borderRadius","height","color","fontSize","fontWeight","imageCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  GestureResponderEvent,\n  Image,\n  Modal,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport ImageViewer from 'react-native-image-zoom-viewer';\nimport { Immutable, isImmutable } from 'seamless-immutable';\n\nimport { CloseButton } from '../CloseButton/CloseButton';\n\nimport { useMessageContentContext } from '../../contexts/messageContentContext/MessageContentContext';\nimport { useTranslationContext } from '../../contexts/translationContext/TranslationContext';\nimport { styled } from '../../styles/styledComponents';\nimport { makeImageCompatibleUrl } from '../../utils/utils';\n\nimport type { IImageInfo } from 'react-native-image-zoom-viewer/built/image-viewer.type';\nimport type { Attachment } from 'stream-chat';\n\nimport type { Alignment } from '../../contexts/messagesContext/MessagesContext';\nimport type { DefaultAttachmentType, UnknownType } from '../../types/types';\n\nconst Single = styled.TouchableOpacity<{ alignment: Alignment }>`\n  border-bottom-left-radius: ${({ alignment }) =>\n    alignment === 'right' ? 16 : 2}px;\n  border-bottom-right-radius: ${({ alignment }) =>\n    alignment === 'left' ? 16 : 2}px;\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n  height: 200px;\n  overflow: hidden;\n  width: ${({ theme }) => theme.message.gallery.width}px;\n  ${({ theme }) => theme.message.gallery.single.css}\n`;\n\nconst GalleryContainer = styled.View<{\n  alignment: Alignment;\n  length?: number;\n}>`\n  border-bottom-left-radius: ${({ alignment }) =>\n    alignment === 'right' ? 16 : 2}px;\n  border-bottom-right-radius: ${({ alignment }) =>\n    alignment === 'left' ? 16 : 2}px;\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n  flex-direction: row;\n  flex-wrap: wrap;\n  height: ${({ length, theme }) =>\n    length && length >= 4\n      ? theme.message.gallery.doubleSize\n      : length === 3\n      ? theme.message.gallery.halfSize\n      : theme.message.gallery.size}px;\n  overflow: hidden;\n  width: ${({ theme }) => theme.message.gallery.width}px;\n  ${({ theme }) => theme.message.gallery.galleryContainer.css}\n`;\n\nconst ImageContainer = styled.TouchableOpacity<{ length?: number }>`\n  height: ${({ length, theme }) =>\n    length !== 3\n      ? theme.message.gallery.size\n      : theme.message.gallery.halfSize}px;\n  width: ${({ length, theme }) =>\n    length !== 3\n      ? theme.message.gallery.size\n      : theme.message.gallery.halfSize}px;\n  ${({ theme }) => theme.message.gallery.imageContainer.css}\n`;\n\nconst HeaderContainer = styled.View`\n  flex-direction: row;\n  justify-content: flex-end;\n  position: absolute;\n  width: 100%;\n  z-index: 1000;\n  ${({ theme }) => theme.message.gallery.header.container.css}\n`;\n\nconst HeaderButton = styled.TouchableOpacity`\n  align-items: center;\n  border-radius: 20px;\n  height: 30px;\n  justify-content: center;\n  margin-right: 32px;\n  margin-top: 32px;\n  width: 30px;\n  ${({ theme }) => theme.message.gallery.header.button.css}\n`;\n\ntype GalleryHeaderProps = {\n  handleDismiss: ((event: GestureResponderEvent) => void) | undefined;\n};\n\nconst GalleryHeader: React.FC<GalleryHeaderProps> = ({ handleDismiss }) => {\n  useEffect(() => {\n    StatusBar.setHidden(true);\n    return () => StatusBar.setHidden(false);\n  }, []);\n\n  return (\n    <HeaderContainer>\n      <HeaderButton onPress={handleDismiss}>\n        <CloseButton />\n      </HeaderButton>\n    </HeaderContainer>\n  );\n};\n\nexport type GalleryProps<At extends UnknownType = DefaultAttachmentType> = {\n  /**\n   * Position of the message, either 'right' or 'left'\n   */\n  alignment: Alignment;\n  /**\n   * The image attachments to render\n   */\n  images: Attachment<At>[];\n};\n\n/**\n * UI component for card in attachments.\n *\n * @example ./Gallery.md\n */\nexport const Gallery = <At extends UnknownType = DefaultAttachmentType>(\n  props: GalleryProps<At>,\n) => {\n  const { alignment, images } = props;\n\n  const { additionalTouchableProps, onLongPress } = useMessageContentContext();\n  const { t } = useTranslationContext();\n\n  const [viewerModalImageIndex, setViewerModalImageIndex] = useState(0);\n  const [viewerModalOpen, setViewerModalOpen] = useState(false);\n\n  if (!images?.length) return null;\n\n  const immutableGalleryImages = images.reduce((returnArray, currentImage) => {\n    const url = currentImage.image_url || currentImage.thumb_url;\n    if (url) {\n      returnArray.push({\n        url: makeImageCompatibleUrl(url),\n      } as Immutable<IImageInfo>);\n    }\n    return returnArray;\n  }, [] as Immutable<IImageInfo>[]);\n\n  const galleryImages: IImageInfo[] = [];\n\n  immutableGalleryImages.forEach((image) => {\n    const galleryImage = isImmutable(image) ? image.asMutable() : image;\n    galleryImages.push(galleryImage);\n  });\n\n  if (galleryImages.length === 1) {\n    return (\n      <>\n        <Single\n          alignment={alignment}\n          onLongPress={onLongPress}\n          onPress={() => setViewerModalOpen(true)}\n          testID='image-attachment-single'\n          {...additionalTouchableProps}\n        >\n          <Image\n            resizeMode='cover'\n            source={{ uri: galleryImages[0].url }}\n            style={{ flex: 1 }}\n          />\n        </Single>\n        {viewerModalOpen && (\n          <Modal\n            onRequestClose={() => setViewerModalOpen(false)}\n            transparent\n            visible\n          >\n            <ImageViewer\n              // TODO: We don't have 'save image' functionality.\n              // Until we do, lets disable this feature. saveToLocalByLongPress prop basically\n              // opens up popup menu to with an option \"Save to the album\", which basically does nothing.\n              enableSwipeDown\n              imageUrls={galleryImages}\n              onCancel={() => setViewerModalOpen(false)}\n              renderHeader={() => (\n                <GalleryHeader\n                  handleDismiss={() => setViewerModalOpen(false)}\n                />\n              )}\n              saveToLocalByLongPress={false}\n              useNativeDriver\n            />\n          </Modal>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <GalleryContainer\n        alignment={alignment}\n        length={galleryImages.length}\n        testID='image-multiple-container'\n      >\n        {galleryImages.slice(0, 4).map((image, i) => (\n          <ImageContainer\n            activeOpacity={0.8}\n            key={`gallery-item-${i}`}\n            length={galleryImages.length}\n            onLongPress={onLongPress}\n            onPress={() => {\n              setViewerModalOpen(true);\n              setViewerModalImageIndex(i);\n            }}\n            testID='image-multiple'\n            {...additionalTouchableProps}\n          >\n            {i === 3 && galleryImages.length > 4 ? (\n              <View style={{ flex: 1 }}>\n                <Image\n                  resizeMode='cover'\n                  source={{ uri: galleryImages[i].url }}\n                  style={{ flex: 1, opacity: 0.5 }}\n                />\n                <View\n                  style={[\n                    StyleSheet.absoluteFillObject,\n                    { alignItems: 'center', justifyContent: 'center' },\n                  ]}\n                >\n                  <View\n                    style={{\n                      alignItems: 'center',\n                      backgroundColor: '#000000B0',\n                      borderRadius: 20,\n                      height: '40%',\n                      justifyContent: 'center',\n                      width: '90%',\n                    }}\n                  >\n                    <Text\n                      style={{ color: '#fff', fontSize: 20, fontWeight: '700' }}\n                    >\n                      +\n                      {t('{{ imageCount }} more', {\n                        imageCount: galleryImages.length - i,\n                      })}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n            ) : (\n              <Image\n                resizeMode='cover'\n                source={{ uri: image?.url }}\n                style={{ flex: 1 }}\n              />\n            )}\n          </ImageContainer>\n        ))}\n      </GalleryContainer>\n      {viewerModalOpen && (\n        <Modal\n          onRequestClose={() => setViewerModalOpen(false)}\n          transparent\n          visible\n        >\n          <ImageViewer\n            // TODO: We don't have 'save image' functionality.\n            // Until we do, lets disable this feature. saveToLocalByLongPress prop basically\n            // opens up popup menu to with an option \"Save to the album\", which basically does nothing.\n            enableSwipeDown\n            imageUrls={galleryImages}\n            index={viewerModalImageIndex}\n            onCancel={() => setViewerModalOpen(false)}\n            renderHeader={() => (\n              <GalleryHeader handleDismiss={() => setViewerModalOpen(false)} />\n            )}\n            saveToLocalByLongPress={false}\n            useNativeDriver\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n"]}