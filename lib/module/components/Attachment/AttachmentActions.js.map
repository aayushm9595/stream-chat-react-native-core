{"version":3,"sources":["AttachmentActions.tsx"],"names":["Container","styled","View","theme","message","actions","container","css","ActionButton","TouchableOpacity","buttonStyle","button","primaryBackgroundColor","defaultBackgroundColor","primaryBorderColor","defaultBorderColor","ActionButtonText","Text","buttonText","primaryColor","defaultColor","AttachmentActions","props","actionHandler","map","action","index","style","value","name","text"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,SAAS,GAAGC,yBAAOC,IAAV,oBAIX;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBC,SAAtB,CAAgCC,GAA/C;AAAA,CAJW,CAAf;;AAOA,IAAMC,YAAY,GAAGP,yBAAOQ,gBAAV,qBACI;AAAA,MAAGC,WAAH,SAAGA,WAAH;AAAA,MAAgBP,KAAhB,SAAgBA,KAAhB;AAAA,SAClBO,WAAW,KAAK,SAAhB,GACIP,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBM,MAAtB,CAA6BC,sBADjC,GAEIT,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBM,MAAtB,CAA6BE,sBAHf;AAAA,CADJ,EAKA;AAAA,MAAGH,WAAH,SAAGA,WAAH;AAAA,MAAgBP,KAAhB,SAAgBA,KAAhB;AAAA,SACdO,WAAW,KAAK,SAAhB,GACIP,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBM,MAAtB,CAA6BG,kBADjC,GAEIX,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBM,MAAtB,CAA6BI,kBAHnB;AAAA,CALA,EAad;AAAA,MAAGZ,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBM,MAAtB,CAA6BJ,GAA5C;AAAA,CAbc,CAAlB;;AAgBA,IAAMS,gBAAgB,GAAGf,yBAAOgB,IAAV,qBACX;AAAA,MAAGP,WAAH,SAAGA,WAAH;AAAA,MAAgBP,KAAhB,SAAgBA,KAAhB;AAAA,SACPO,WAAW,KAAK,SAAhB,GACIP,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBa,UAAtB,CAAiCC,YADrC,GAEIhB,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBa,UAAtB,CAAiCE,YAH9B;AAAA,CADW,EAKlB;AAAA,MAAGjB,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBa,UAAtB,CAAiCX,GAAhD;AAAA,CALkB,CAAtB;;AAqBO,IAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,CAG/BC,KAH+B,EAI5B;AAAA,MACKC,aADL,GACgCD,KADhC,CACKC,aADL;AAAA,MACoBlB,OADpB,GACgCiB,KADhC,CACoBjB,OADpB;AAGH,SACE,gCAAC,SAAD;AAAW,IAAA,MAAM,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,oBACGA,OAAO,CAAEmB,GAAT,CAAa,UAACC,MAAD,EAASC,KAAT;AAAA,WACZ,gCAAC,YAAD;AACE,MAAA,WAAW,EAAED,MAAM,CAACE,KADtB;AAEE,MAAA,GAAG,EAAKD,KAAL,SAAcD,MAAM,CAACG,KAF1B;AAGE,MAAA,OAAO,EAAE,mBAAM;AACb,YAAIH,MAAM,CAACI,IAAP,IAAeJ,MAAM,CAACG,KAAtB,IAA+BL,aAAnC,EAAkD;AAChDA,UAAAA,aAAa,CAACE,MAAM,CAACI,IAAR,EAAcJ,MAAM,CAACG,KAArB,CAAb;AACD;AACF,OAPH;AAQE,MAAA,MAAM,iCAA+BH,MAAM,CAACI,IAR9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,gCAAC,gBAAD;AAAkB,MAAA,WAAW,EAAEJ,MAAM,CAACE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACK,IADV,CAVF,CADY;AAAA,GAAb,CADH,CADF;AAoBD,CA3BM","sourcesContent":["import React from 'react';\n\nimport { styled } from '../../styles/styledComponents';\n\nimport type { Attachment } from 'stream-chat';\n\nimport type { ActionHandler } from './Attachment';\nimport type { DefaultAttachmentType, UnknownType } from '../../types/types';\n\nconst Container = styled.View`\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 5px;\n  ${({ theme }) => theme.message.actions.container.css}\n`;\n\nconst ActionButton = styled.TouchableOpacity<{ buttonStyle?: string }>`\n  background-color: ${({ buttonStyle, theme }) =>\n    buttonStyle === 'primary'\n      ? theme.message.actions.button.primaryBackgroundColor\n      : theme.message.actions.button.defaultBackgroundColor};\n  border-color: ${({ buttonStyle, theme }) =>\n    buttonStyle === 'primary'\n      ? theme.message.actions.button.primaryBorderColor\n      : theme.message.actions.button.defaultBorderColor};\n  border-radius: 20px;\n  border-width: 1px;\n  padding-horizontal: 10px;\n  padding-vertical: 5px;\n  ${({ theme }) => theme.message.actions.button.css}\n`;\n\nconst ActionButtonText = styled.Text<{ buttonStyle?: string }>`\n  color: ${({ buttonStyle, theme }) =>\n    buttonStyle === 'primary'\n      ? theme.message.actions.buttonText.primaryColor\n      : theme.message.actions.buttonText.defaultColor};\n  ${({ theme }) => theme.message.actions.buttonText.css}\n`;\n\nexport type AttachmentActionsProps<\n  At extends UnknownType = DefaultAttachmentType\n> = Attachment<At> & {\n  /** The handler to execute after selecting an action */\n  actionHandler?: ActionHandler;\n};\n\n/**\n * AttachmentActions - The actions you can take on an attachment.\n * Actions in combination with attachments can be used to build [commands](https://getstream.io/chat/docs/#channel_commands).\n *\n * @example ./AttachmentActions.md\n */\nexport const AttachmentActions = <\n  At extends UnknownType = DefaultAttachmentType\n>(\n  props: AttachmentActionsProps<At>,\n) => {\n  const { actionHandler, actions } = props;\n\n  return (\n    <Container testID='attachment-actions'>\n      {actions?.map((action, index) => (\n        <ActionButton\n          buttonStyle={action.style}\n          key={`${index}-${action.value}`}\n          onPress={() => {\n            if (action.name && action.value && actionHandler) {\n              actionHandler(action.name, action.value);\n            }\n          }}\n          testID={`attachment-actions-button-${action.name}`}\n        >\n          <ActionButtonText buttonStyle={action.style}>\n            {action.text}\n          </ActionButtonText>\n        </ActionButton>\n      ))}\n    </Container>\n  );\n};\n"]}