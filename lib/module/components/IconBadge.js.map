{"version":3,"sources":["IconBadge.tsx"],"names":["Icon","styled","View","theme","iconBadge","icon","css","IconInner","iconInner","UnreadCount","Text","unreadCount","IconBadge","props","children","showNumber","unread"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,yBAAOC,IAAV,oBAMN;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,GAApC;AAAA,CANM,CAAV;;AASA,IAAMC,SAAS,GAAGN,yBAAOC,IAAV,qBASX;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,SAAN,CAAgBI,SAAhB,CAA0BF,GAAzC;AAAA,CATW,CAAf;;AAYA,IAAMG,WAAW,GAAGR,yBAAOS,IAAV,qBAGb;AAAA,MAAGP,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,SAAN,CAAgBO,WAAhB,CAA4BL,GAA3C;AAAA,CAHa,CAAjB;;AAWO,IAAMM,SAAmC,GAAG,SAAtCA,SAAsC,CAACC,KAAD,EAAW;AAAA,MACpDC,QADoD,GACnBD,KADmB,CACpDC,QADoD;AAAA,MAC1CC,UAD0C,GACnBF,KADmB,CAC1CE,UAD0C;AAAA,MAC9BC,MAD8B,GACnBH,KADmB,CAC9BG,MAD8B;AAG5D,SACE,gCAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,EAEGE,MAAM,GAAG,CAAT,IACC,gCAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,IAAI,gCAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,MAAd,CADjB,CADF,CAHJ,CADF;AAYD,CAfM","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\n\nimport { styled } from '../styles/styledComponents';\n\nconst Icon = styled.View`\n  align-items: center;\n  align-self: center;\n  border-radius: 20px;\n  justify-content: center;\n  padding-top: 5px;\n  ${({ theme }) => theme.iconBadge.icon.css};\n`;\n\nconst IconInner = styled.View`\n  align-items: center;\n  align-self: flex-start;\n  background-color: green;\n  border-radius: 20px;\n  height: 15px;\n  justify-content: center;\n  min-width: 15px;\n  padding-horizontal: 3px;\n  ${({ theme }) => theme.iconBadge.iconInner.css};\n`;\n\nconst UnreadCount = styled.Text`\n  color: #ffffff;\n  font-size: 10px;\n  ${({ theme }) => theme.iconBadge.unreadCount.css};\n`;\n\nexport type IconBadgeProps = {\n  unread: number;\n  showNumber?: boolean;\n};\n\nexport const IconBadge: React.FC<IconBadgeProps> = (props) => {\n  const { children, showNumber, unread } = props;\n\n  return (\n    <View>\n      {children}\n      {unread > 0 && (\n        <Icon>\n          <IconInner>\n            {showNumber && <UnreadCount>{unread}</UnreadCount>}\n          </IconInner>\n        </Icon>\n      )}\n    </View>\n  );\n};\n"]}