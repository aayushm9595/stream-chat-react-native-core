{"version":3,"sources":["KeyboardCompatibleView.tsx"],"names":["KeyboardCompatibleView","props","_frame","_keyboardEvent","_subscriptions","_initialFrameHeight","_onKeyboardChange","event","_updateBottomIfNecessary","_onLayout","nativeEvent","layout","height","setState","bottom","duration","easing","endCoordinates","_relativeKeyboardHeight","state","LayoutAnimation","configureNext","update","type","Types","_handleAppStateChange","nextAppState","appState","match","setKeyboardListeners","unsetKeyboardListeners","Platform","OS","Keyboard","addListener","push","isKeyboardOpen","filter","subscription","remove","dismissKeyboard","Promise","resolve","dismiss","AppState","currentState","viewRef","React","createRef","keyboardFrame","frame","keyboardY","screenY","keyboardVerticalOffset","Math","max","y","addEventListener","removeEventListener","behavior","children","contentContainerStyle","enabled","style","bottomHeight","heightStyle","flex","StyleSheet","compose","paddingBottom","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  AppState,\n  AppStateStatus,\n  EmitterSubscription,\n  Keyboard,\n  KeyboardAvoidingViewProps,\n  KeyboardEvent,\n  KeyboardEventListener,\n  LayoutAnimation,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  ScreenRect,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { KeyboardProvider } from '../../contexts/keyboardContext/KeyboardContext';\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n *\n * Following piece of code has been mostly copied from KeyboardAvoidingView component, with few additional tweaks.\n */\nexport class KeyboardCompatibleView extends React.Component<\n  KeyboardAvoidingViewProps,\n  { appState: AppStateStatus; bottom: number; isKeyboardOpen: boolean }\n> {\n  static defaultProps: Pick<\n    KeyboardAvoidingViewProps,\n    'behavior' | 'enabled' | 'keyboardVerticalOffset'\n  > = {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'position',\n    enabled: true,\n    keyboardVerticalOffset: Platform.OS === 'ios' ? 86.5 : -300, // default MessageInput height\n  };\n\n  _frame: LayoutRectangle | null = null;\n  _keyboardEvent: KeyboardEvent | null = null;\n  _subscriptions: EmitterSubscription[] = [];\n  viewRef: React.RefObject<View>;\n  _initialFrameHeight = 0;\n  constructor(props: KeyboardAvoidingViewProps) {\n    super(props);\n    this.state = {\n      appState: AppState.currentState,\n      bottom: 0,\n      isKeyboardOpen: false,\n    };\n    this.viewRef = React.createRef();\n  }\n\n  _relativeKeyboardHeight(keyboardFrame: ScreenRect) {\n    const frame = this._frame;\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n\n    const keyboardY =\n      keyboardFrame.screenY - (this.props.keyboardVerticalOffset as number);\n\n    // Calculate the displacement needed for the view such that it\n    // no longer overlaps with the keyboard\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  _onKeyboardChange: KeyboardEventListener = (event) => {\n    this._keyboardEvent = event;\n    this._updateBottomIfNecessary();\n  };\n\n  _onLayout: (event: LayoutChangeEvent) => void = (event) => {\n    this._frame = event.nativeEvent.layout;\n    if (!this._initialFrameHeight) {\n      // save the initial frame height, before the keyboard is visible\n      this._initialFrameHeight = this._frame.height;\n    }\n\n    this._updateBottomIfNecessary();\n  };\n\n  _updateBottomIfNecessary = () => {\n    if (this._keyboardEvent === null) {\n      this.setState({ bottom: 0 });\n      return;\n    }\n\n    const { duration, easing, endCoordinates } = this._keyboardEvent;\n    const height = this._relativeKeyboardHeight(endCoordinates);\n\n    if (this.state.bottom === height) {\n      return;\n    }\n\n    if (duration && easing) {\n      LayoutAnimation.configureNext({\n        // We have to pass the duration equal to minimal accepted duration defined here: RCTLayoutAnimation.m\n        duration: duration > 10 ? duration : 10,\n        update: {\n          duration: duration > 10 ? duration : 10,\n          type: LayoutAnimation.Types[easing] || 'keyboard',\n        },\n      });\n    }\n    this.setState({ bottom: height });\n  };\n\n  _handleAppStateChange = (nextAppState: AppStateStatus) => {\n    if (\n      this.state.appState.match(/inactive|background/) &&\n      nextAppState === 'active'\n    ) {\n      this.setKeyboardListeners();\n    }\n\n    if (nextAppState.match(/inactive|background/)) {\n      this.unsetKeyboardListeners();\n    }\n\n    this.setState({ appState: nextAppState });\n  };\n\n  setKeyboardListeners = () => {\n    if (Platform.OS === 'ios') {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardWillChangeFrame', this._onKeyboardChange),\n      ];\n    } else {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardDidHide', this._onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', this._onKeyboardChange),\n      ];\n    }\n\n    this._subscriptions.push(\n      Keyboard.addListener('keyboardDidHide', () => {\n        this.setState({ isKeyboardOpen: false });\n      }),\n      Keyboard.addListener('keyboardDidShow', () => {\n        this.setState({ isKeyboardOpen: true });\n      }),\n    );\n  };\n\n  unsetKeyboardListeners = () => {\n    this._subscriptions = this._subscriptions.filter((subscription) => {\n      subscription.remove();\n      return false;\n    });\n  };\n\n  dismissKeyboard = () => {\n    if (!this.state.isKeyboardOpen) {\n      return;\n    }\n\n    return new Promise((resolve) => {\n      const subscription = Keyboard.addListener('keyboardDidHide', () => {\n        resolve();\n        subscription.remove();\n      });\n\n      Keyboard.dismiss();\n    });\n  };\n\n  componentDidMount() {\n    AppState.addEventListener('change', this._handleAppStateChange);\n    this.setKeyboardListeners();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener('change', this._handleAppStateChange);\n    this.unsetKeyboardListeners();\n  }\n\n  render() {\n    const {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled,\n      style,\n      ...props\n    } = this.props;\n    const bottomHeight = enabled ? this.state.bottom : 0;\n    switch (behavior) {\n      case 'height':\n        // eslint-disable-next-line no-case-declarations\n        let heightStyle;\n        if (this._frame !== null && this.state.bottom > 0) {\n          // Note that we only apply a height change when there is keyboard present,\n          // i.e. this.state.bottom is greater than 0. If we remove that condition,\n          // this.frame.height will never go back to its original value.\n          // When height changes, we need to disable flex.\n          heightStyle = {\n            flex: 0,\n            height: this._initialFrameHeight - bottomHeight,\n          };\n        }\n        return (\n          <KeyboardProvider value={{ dismissKeyboard: this.dismissKeyboard }}>\n            <View\n              onLayout={this._onLayout}\n              ref={this.viewRef}\n              style={StyleSheet.compose(style, heightStyle)}\n              {...props}\n            >\n              {children}\n            </View>\n          </KeyboardProvider>\n        );\n\n      case 'position':\n        return (\n          <KeyboardProvider value={{ dismissKeyboard: this.dismissKeyboard }}>\n            <View\n              onLayout={this._onLayout}\n              ref={this.viewRef}\n              style={style}\n              {...props}\n            >\n              <View\n                style={StyleSheet.compose(contentContainerStyle, {\n                  bottom: bottomHeight,\n                })}\n              >\n                {children}\n              </View>\n            </View>\n          </KeyboardProvider>\n        );\n\n      case 'padding':\n        return (\n          <KeyboardProvider value={{ dismissKeyboard: this.dismissKeyboard }}>\n            <View\n              onLayout={this._onLayout}\n              ref={this.viewRef}\n              style={StyleSheet.compose(style, { paddingBottom: bottomHeight })}\n              {...props}\n            >\n              {children}\n            </View>\n          </KeyboardProvider>\n        );\n\n      default:\n        return (\n          <KeyboardProvider value={{ dismissKeyboard: this.dismissKeyboard }}>\n            <View\n              onLayout={this._onLayout}\n              ref={this.viewRef}\n              style={style}\n              {...props}\n            >\n              {children}\n            </View>\n          </KeyboardProvider>\n        );\n    }\n  }\n}\n"]}