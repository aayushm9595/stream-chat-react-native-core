{"version":3,"sources":["useMessageDetailsForState.ts"],"names":["useMessageDetailsForState","message","initialValue","fileUploads","setFileUploads","imageUploads","setImageUploads","Array","isArray","mentioned_users","map","user","id","mentionedUsers","setMentionedUsers","numberOfUploads","setNumberOfUploads","text","setText","newFileUploads","newImageUploads","attachments","attach","type","push","file","name","title","size","file_size","mime_type","state","url","asset_url","fallback","image_url","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { generateRandomId } from '../../../utils/generateRandomId';\n\nimport {\n  isEditingBoolean,\n  MessagesContextValue,\n} from '../../../contexts/messagesContext/MessagesContext';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport type FileUpload = {\n  file: {\n    name: string;\n    size?: number | string;\n    type?: string;\n    uri?: string;\n  };\n  id: string;\n  state: string;\n  url?: string;\n};\n\nexport type ImageUpload = {\n  file: {\n    name?: string;\n    uri?: string;\n  };\n  id: string;\n  state: string;\n  url?: string;\n};\n\nexport const useMessageDetailsForState = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>(\n  message: MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>['editing'],\n  initialValue?: string,\n) => {\n  const [fileUploads, setFileUploads] = useState<FileUpload[]>([]);\n  const [imageUploads, setImageUploads] = useState<ImageUpload[]>([]);\n  const [mentionedUsers, setMentionedUsers] = useState(\n    (!isEditingBoolean<At, Ch, Co, Ev, Me, Re, Us>(message) &&\n      Array.isArray(message?.mentioned_users) &&\n      message.mentioned_users.map((user) => user.id)) ||\n      [],\n  );\n  const [numberOfUploads, setNumberOfUploads] = useState(0);\n  const [text, setText] = useState(initialValue || '');\n\n  useEffect(() => {\n    if (message && !isEditingBoolean<At, Ch, Co, Ev, Me, Re, Us>(message)) {\n      setText(message?.text || '');\n      const newFileUploads = [];\n      const newImageUploads = [];\n\n      const attachments = Array.isArray(message.attachments)\n        ? message.attachments\n        : [];\n\n      for (const attach of attachments) {\n        if (attach.type === 'file') {\n          const id = generateRandomId();\n          newFileUploads.push({\n            file: {\n              name: attach.title || '',\n              size: attach.file_size,\n              type: attach.mime_type,\n            },\n            id,\n            state: 'finished',\n            url: attach.asset_url,\n          });\n        } else if (attach.type === 'image') {\n          const id = generateRandomId();\n          newImageUploads.push({\n            file: { name: attach.fallback },\n            id,\n            state: 'finished',\n            url: attach.image_url,\n          });\n        }\n      }\n      if (newFileUploads.length) {\n        setFileUploads(newFileUploads);\n      }\n      if (newImageUploads.length) {\n        setImageUploads(newImageUploads);\n      }\n    }\n  }, [message]);\n\n  return {\n    fileUploads,\n    imageUploads,\n    mentionedUsers,\n    numberOfUploads,\n    setFileUploads,\n    setImageUploads,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setText,\n    text,\n  };\n};\n"]}