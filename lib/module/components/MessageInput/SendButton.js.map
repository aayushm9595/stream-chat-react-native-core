{"version":3,"sources":["SendButton.tsx"],"names":["iconEdit","require","iconSendNewMessage","Container","styled","TouchableOpacity","theme","messageInput","sendButton","css","SendButtonIcon","Image","sendButtonIcon","SendButton","props","disabled","sendMessage","editing"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAMA,QAA4B,GAAGC,OAAO,oCAA5C;;AACA,IAAMC,kBAAsC,GAAGD,OAAO,2CAAtD;;AAEA,IAAME,SAAS,GAAGC,yBAAOC,gBAAV,oBAEX;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,YAAN,CAAmBC,UAAnB,CAA8BC,GAA7C;AAAA,CAFW,CAAf;;AAKA,IAAMC,cAAc,GAAGN,yBAAOO,KAAV,qBAGhB;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,YAAN,CAAmBK,cAAnB,CAAkCH,GAAjD;AAAA,CAHgB,CAApB;;AAkBO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CASxBC,KATwB,EAUrB;AAAA,wBACuCA,KADvC,CACKC,QADL;AAAA,MACKA,QADL,gCACgB,KADhB;AAAA,MACuBC,WADvB,GACuCF,KADvC,CACuBE,WADvB;;AAAA,4BAEiB,0CAFjB;AAAA,MAEKC,OAFL,uBAEKA,OAFL;;AAGH,SACE,gCAAC,SAAD;AAAW,IAAA,QAAQ,EAAEF,QAArB;AAA+B,IAAA,OAAO,EAAEC,WAAxC;AAAqD,IAAA,MAAM,EAAC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,OAAO,GAAGjB,QAAH,GAAcE,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAlBM","sourcesContent":["import React from 'react';\n\nimport { useMessagesContext } from '../../contexts/messagesContext/MessagesContext';\nimport { styled } from '../../styles/styledComponents';\n\nimport type { GestureResponderEvent, ImageRequireSource } from 'react-native';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\nconst iconEdit: ImageRequireSource = require('../../images/icons/icon_edit.png');\nconst iconSendNewMessage: ImageRequireSource = require('../../images/icons/icon_new_message.png');\n\nconst Container = styled.TouchableOpacity`\n  margin-left: 8px;\n  ${({ theme }) => theme.messageInput.sendButton.css};\n`;\n\nconst SendButtonIcon = styled.Image`\n  height: 15px;\n  width: 15px;\n  ${({ theme }) => theme.messageInput.sendButtonIcon.css};\n`;\n\nexport type SendButtonProps = {\n  /** Disables the button */\n  disabled?: boolean;\n  /** Function that sends message */\n  sendMessage?: (event: GestureResponderEvent) => void;\n};\n\n/**\n * UI Component for send button in MessageInput component.\n *\n * @example ./SendButton.md\n */\nexport const SendButton = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>(\n  props: SendButtonProps,\n) => {\n  const { disabled = false, sendMessage } = props;\n  const { editing } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n  return (\n    <Container disabled={disabled} onPress={sendMessage} testID='send-button'>\n      <SendButtonIcon source={editing ? iconEdit : iconSendNewMessage} />\n    </Container>\n  );\n};\n"]}