{"version":3,"sources":["MessageAvatar.tsx"],"names":["Container","styled","View","alignment","theme","message","avatarWrapper","container","css","Spacer","spacer","MessageAvatar","props","groupStyles","showAvatar","visible","user","image","name","id"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAMA,SAAS,GAAGC,yBAAOC,IAAV,oBACE;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SAAoBA,SAAS,KAAK,OAAd,GAAwB,CAAxB,GAA4B,CAAhD;AAAA,CADF,EAEG;AAAA,MAAGA,SAAH,SAAGA,SAAH;AAAA,SAAoBA,SAAS,KAAK,MAAd,GAAuB,CAAvB,GAA2B,CAA/C;AAAA,CAFH,EAGX;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,aAAd,CAA4BC,SAA5B,CAAsCC,GAArD;AAAA,CAHW,CAAf;;AAMA,IAAMC,MAAM,GAAGR,yBAAOC,IAAV,qBAGR;AAAA,MAAGE,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,aAAd,CAA4BI,MAA5B,CAAmCF,GAAlD;AAAA,CAHQ,CAAZ;;AAkBO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAS3BC,KAT2B,EAUxB;AAAA;;AAAA,MACKT,SADL,GACqDS,KADrD,CACKT,SADL;AAAA,MACgBU,WADhB,GACqDD,KADrD,CACgBC,WADhB;AAAA,MAC6BR,OAD7B,GACqDO,KADrD,CAC6BP,OAD7B;AAAA,MACsCS,UADtC,GACqDF,KADrD,CACsCE,UADtC;AAGH,MAAMC,OAAO,GACX,OAAOD,UAAP,KAAsB,SAAtB,GACIA,UADJ,GAEID,WAAW,CAAC,CAAD,CAAX,KAAmB,QAAnB,IAA+BA,WAAW,CAAC,CAAD,CAAX,KAAmB,QAHxD;AAKA,SACE,gCAAC,SAAD;AAAW,IAAA,SAAS,EAAEV,SAAtB;AAAiC,IAAA,MAAM,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,OAAO,GACN,gCAAC,cAAD;AACE,IAAA,KAAK,mBAAEV,OAAO,CAACW,IAAV,qBAAE,cAAcC,KADvB;AAEE,IAAA,IAAI,EAAE,mBAAAZ,OAAO,CAACW,IAAR,oCAAcE,IAAd,wBAAsBb,OAAO,CAACW,IAA9B,qBAAsB,eAAcG,EAApC,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAMN,gCAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAYD,CA9BM","sourcesContent":["import React from 'react';\n\nimport { Avatar } from '../../Avatar/Avatar';\n\nimport { styled } from '../../../styles/styledComponents';\n\nimport type { ForwardedMessageProps } from './MessageContent';\n\nimport type { Alignment } from '../../../contexts/messagesContext/MessagesContext';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nconst Container = styled.View<{ alignment: Alignment }>`\n  margin-left: ${({ alignment }) => (alignment === 'right' ? 8 : 0)}px;\n  margin-right: ${({ alignment }) => (alignment === 'left' ? 8 : 0)}px;\n  ${({ theme }) => theme.message.avatarWrapper.container.css}\n`;\n\nconst Spacer = styled.View`\n  height: 28px;\n  width: 32px;\n  ${({ theme }) => theme.message.avatarWrapper.spacer.css}\n`;\n\nexport type MessageAvatarProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType\n> = ForwardedMessageProps<At, Ch, Co, Ev, Me, Re, Us> & {\n  showAvatar?: boolean;\n};\n\nexport const MessageAvatar = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType\n>(\n  props: MessageAvatarProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { alignment, groupStyles, message, showAvatar } = props;\n\n  const visible =\n    typeof showAvatar === 'boolean'\n      ? showAvatar\n      : groupStyles[0] === 'single' || groupStyles[0] === 'bottom';\n\n  return (\n    <Container alignment={alignment} testID='message-avatar'>\n      {visible ? (\n        <Avatar\n          image={message.user?.image}\n          name={message.user?.name || message.user?.id}\n        />\n      ) : (\n        <Spacer testID='spacer' />\n      )}\n    </Container>\n  );\n};\n"]}