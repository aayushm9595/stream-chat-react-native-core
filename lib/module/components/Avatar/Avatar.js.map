{"version":3,"sources":["Avatar.tsx"],"names":["BASE_AVATAR_FALLBACK_TEXT_SIZE","BASE_AVATAR_SIZE","AvatarContainer","styled","View","theme","avatar","container","css","AvatarFallback","colors","primary","size","fallback","AvatarImage","Image","image","AvatarText","Text","textLight","fontSize","text","getInitials","fullName","split","slice","map","name","charAt","Avatar","props","testID","imageError","setImageError","uri"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { styled } from '../../styles/styledComponents';\n\nconst BASE_AVATAR_FALLBACK_TEXT_SIZE = 14;\nconst BASE_AVATAR_SIZE = 32;\n\nconst AvatarContainer = styled.View`\n  align-items: center;\n  ${({ theme }) => theme.avatar.container.css}\n`;\n\nconst AvatarFallback = styled.View<{ size: number }>`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: ${({ size }) => size / 2}px;\n  height: ${({ size }) => size}px;\n  justify-content: center;\n  width: ${({ size }) => size}px;\n  ${({ theme }) => theme.avatar.fallback.css}\n`;\n\nconst AvatarImage = styled.Image<{ size: number }>`\n  border-radius: ${({ size }) => size / 2}px;\n  height: ${({ size }) => size}px;\n  width: ${({ size }) => size}px;\n  ${({ theme }) => theme.avatar.image.css}\n`;\n\nconst AvatarText = styled.Text<{ fontSize: number }>`\n  color: ${({ theme }) => theme.colors.textLight};\n  font-size: ${({ fontSize }) => fontSize}px;\n  font-weight: bold;\n  text-transform: uppercase;\n  ${({ theme }) => theme.avatar.text.css}\n`;\n\nconst getInitials = (fullName?: string) =>\n  fullName\n    ? fullName\n        .split(' ')\n        .slice(0, 2)\n        .map((name) => name.charAt(0))\n    : null;\n\nexport type AvatarProps = {\n  /** image url */\n  image?: string;\n  /** name of the picture, used for title tag fallback */\n  name?: string;\n  /** size in pixels */\n  size?: number;\n  testID?: string;\n};\n\n/**\n * Avatar - A round avatar image with fallback to user's initials\n *\n * @example ./Avatar.md\n */\nexport const Avatar: React.FC<AvatarProps> = (props) => {\n  const { image, name, size = BASE_AVATAR_SIZE, testID } = props;\n  const [imageError, setImageError] = useState(false);\n\n  return (\n    <AvatarContainer>\n      {image && !imageError ? (\n        <AvatarImage\n          accessibilityLabel='initials'\n          onError={() => setImageError(true)}\n          resizeMethod='resize'\n          size={size}\n          source={{ uri: image }}\n          testID={testID || 'avatar-image'}\n        />\n      ) : (\n        <AvatarFallback size={size}>\n          <AvatarText\n            fontSize={\n              BASE_AVATAR_FALLBACK_TEXT_SIZE * (size / BASE_AVATAR_SIZE)\n            }\n            testID={testID || 'avatar-text'}\n          >\n            {getInitials(name)}\n          </AvatarText>\n        </AvatarFallback>\n      )}\n    </AvatarContainer>\n  );\n};\n"]}