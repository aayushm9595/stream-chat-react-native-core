{"version":3,"sources":["KeyboardContext.tsx"],"names":["KeyboardContext","React","createContext","dismissKeyboard","Keyboard","dismiss","KeyboardProvider","children","value","useKeyboardContext","withKeyboardContext","Component","WithKeyboardContextComponent","props","keyboardContext","displayName"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;;;AAQO,IAAMA,eAAe,GAAGC,kBAAMC,aAAN,CAA0C;AACvEC,EAAAA,eAAe,EAAEC,sBAASC;AAD6C,CAA1C,CAAxB;;;;AAIA,IAAMC,gBAEX,GAAG,SAFQA,gBAER;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,KAAb,QAAaA,KAAb;AAAA,SACH,gCAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCD,QAAzC,CADG;AAAA,CAFE;;;;AAMA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAM,uBAAWT,eAAX,CAAN;AAAA,CAA3B;;;;AAEA,IAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,SADiC,EAEiB;AAClD,MAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CACnCC,KADmC,EAEhC;AACH,QAAMC,eAAe,GAAGL,kBAAkB,EAA1C;AAEA,WAAO,gCAAC,SAAD,gCAAgBI,KAAhB,EAAiCC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAND;;AAOAF,EAAAA,4BAA4B,CAACG,WAA7B,2BAAiE,oCAC/DJ,SAD+D,CAAjE;AAGA,SAAOC,4BAAP;AACD,CAdM","sourcesContent":["import React, { useContext } from 'react';\nimport { Keyboard } from 'react-native';\n\nimport { getDisplayName } from '../utils/getDisplayName';\n\nimport type { UnknownType } from '../../types/types';\n\nexport type KeyboardContextValue = {\n  dismissKeyboard: () => void;\n};\n\nexport const KeyboardContext = React.createContext<KeyboardContextValue>({\n  dismissKeyboard: Keyboard.dismiss,\n});\n\nexport const KeyboardProvider: React.FC<{\n  value: KeyboardContextValue;\n}> = ({ children, value }) => (\n  <KeyboardContext.Provider value={value}>{children}</KeyboardContext.Provider>\n);\n\nexport const useKeyboardContext = () => useContext(KeyboardContext);\n\nexport const withKeyboardContext = <P extends UnknownType>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, keyof KeyboardContextValue>> => {\n  const WithKeyboardContextComponent = (\n    props: Omit<P, keyof KeyboardContextValue>,\n  ) => {\n    const keyboardContext = useKeyboardContext();\n\n    return <Component {...(props as P)} {...keyboardContext} />;\n  };\n  WithKeyboardContextComponent.displayName = `WithKeyboardContext${getDisplayName(\n    Component,\n  )}`;\n  return WithKeyboardContextComponent;\n};\n"]}