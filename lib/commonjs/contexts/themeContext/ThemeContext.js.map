{"version":3,"sources":["ThemeContext.tsx"],"names":["ThemeProvider","props","children","style","theme","modifiedTheme","defaultTheme","formattedStyle","formattedTheme"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AAIA;;AACA;;;;AAMO,IAAMA,aAAgD,GAAG,SAAnDA,aAAmD,CAACC,KAAD,EAAW;AAAA,MACjEC,QADiE,GAC7CD,KAD6C,CACjEC,QADiE;AAAA,MACvDC,KADuD,GAC7CF,KAD6C,CACvDE,KADuD;AAEzE,MAAMC,KAAK,GAAG,iCAAd;AACA,MAAMC,aAAa,GAAGD,KAAK,IAAIE,4BAA/B;;AAEA,MAAIH,KAAJ,EAAW;AACT,QAAMI,cAAc,GAAG,8CAAoBJ,KAApB,CAAvB;AACA,QAAMK,cAAc,GAAG,0CAAkB;AAAED,MAAAA,cAAc,EAAdA,cAAF;AAAkBF,MAAAA,aAAa,EAAbA;AAAlB,KAAlB,CAAvB;AACA,2BAAMA,aAAN,EAAqBG,cAArB;AACD;;AAED,SACE,gCAAC,+CAAD;AAA+B,IAAA,KAAK,EAAEH,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,CAhBM","sourcesContent":["import React from 'react';\nimport merge from 'lodash/merge';\n\nimport { replaceCssShorthand, ThemeType } from './utils/replaceCssShorthand';\n\nimport {\n  StyledComponentsThemeProvider,\n  useTheme,\n} from '../../styles/styledComponents';\nimport { defaultTheme } from '../../styles/themeConstants';\nimport { formatDotNotation } from './utils/formatDotNotation';\n\nexport type ThemeProviderInputValue = {\n  style?: ThemeType;\n};\n\nexport const ThemeProvider: React.FC<ThemeProviderInputValue> = (props) => {\n  const { children, style } = props;\n  const theme = useTheme();\n  const modifiedTheme = theme || defaultTheme;\n\n  if (style) {\n    const formattedStyle = replaceCssShorthand(style);\n    const formattedTheme = formatDotNotation({ formattedStyle, modifiedTheme });\n    merge(modifiedTheme, formattedTheme);\n  }\n\n  return (\n    <StyledComponentsThemeProvider theme={modifiedTheme}>\n      {children}\n    </StyledComponentsThemeProvider>\n  );\n};\n"]}