{"version":3,"sources":["useMessageList.ts"],"names":["useMessageList","params","inverted","noGroupByUser","threadList","read","messages","threadMessages","messageList","readList","undefined","messagesWithDates","messageGroupStyles","readData","messagesWithDatesList","map","msg","groupStyles","id","readBy","reverse"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAMA;;AAIA;;AACA;;;;;;AAmBO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAS5BC,MAT4B,EAUwB;AAAA,MAC5CC,QAD4C,GACJD,MADI,CAC5CC,QAD4C;AAAA,MAClCC,aADkC,GACJF,MADI,CAClCE,aADkC;AAAA,MACnBC,UADmB,GACJH,MADI,CACnBG,UADmB;;AAAA,2BAEnC,wCAFmC;AAAA,MAE5CC,IAF4C,sBAE5CA,IAF4C;;AAAA,4BAG/B,0CAH+B;AAAA,MAG5CC,QAH4C,uBAG5CA,QAH4C;;AAAA,0BAIzB,sCAJyB;AAAA,MAI5CC,cAJ4C,qBAI5CA,cAJ4C;;AAMpD,MAAMC,WAAW,GAAGJ,UAAU,GAAGG,cAAH,GAAoBD,QAAlD;AACA,MAAMG,QAEO,GAAGL,UAAU,GAAGM,SAAH,GAAeL,IAFzC;AAIA,MAAMM,iBAAiB,GAAG,8BACxBH,WADwB,CAA1B;AAGA,MAAMI,kBAAkB,GAAG,oCAA2C;AACpED,IAAAA,iBAAiB,EAAjBA,iBADoE;AAEpER,IAAAA,aAAa,EAAbA;AAFoE,GAA3C,CAA3B;AAIA,MAAMU,QAAQ,GAAG,kCACfF,iBADe,EAEfF,QAFe,CAAjB;AAKA,MAAMK,qBAAqB,GAAGH,iBAAiB,CAACI,GAAlB,CAAsB,UAACC,GAAD;AAAA,2CAC/CA,GAD+C;AAElDC,MAAAA,WAAW,EACT,CAAC,kCAA4CD,GAA5C,CAAD,IAAqDA,GAAG,CAACE,EAAzD,GACIN,kBAAkB,CAACI,GAAG,CAACE,EAAL,CAAlB,IAA8B,EADlC,GAEI,EAL4C;AAMlDC,MAAAA,MAAM,EACJ,CAAC,kCAA4CH,GAA5C,CAAD,IAAqDA,GAAG,CAACE,EAAzD,GACIL,QAAQ,CAACG,GAAG,CAACE,EAAL,CAAR,IAAoB,EADxB,GAEI;AAT4C;AAAA,GAAtB,CAA9B;AAWA,SAAOhB,QAAQ,GAAGY,qBAAqB,CAACM,OAAtB,EAAH,GAAqCN,qBAApD;AACD,CA7CM","sourcesContent":["import { getGroupStyles } from '../utils/getGroupStyles';\nimport { getReadStates } from '../utils/getReadStates';\nimport {\n  insertDates,\n  InsertDatesResponse,\n  isDateSeparator,\n} from '../utils/insertDates';\n\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../../contexts/channelContext/ChannelContext';\nimport { useMessagesContext } from '../../../contexts/messagesContext/MessagesContext';\nimport { useThreadContext } from '../../../contexts/threadContext/ThreadContext';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport type UseMessageListParams = {\n  inverted?: boolean;\n  noGroupByUser?: boolean;\n  threadList?: boolean;\n};\n\nexport const useMessageList = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>(\n  params: UseMessageListParams,\n): InsertDatesResponse<At, Ch, Co, Ev, Me, Re, Us> => {\n  const { inverted, noGroupByUser, threadList } = params;\n  const { read } = useChannelContext<At, Ch, Co, Ev, Me, Re, Us>();\n  const { messages } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n  const { threadMessages } = useThreadContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const messageList = threadList ? threadMessages : messages;\n  const readList:\n    | ChannelContextValue<At, Ch, Co, Ev, Me, Re, Us>['read']\n    | undefined = threadList ? undefined : read;\n\n  const messagesWithDates = insertDates<At, Ch, Co, Ev, Me, Re, Us>(\n    messageList,\n  );\n  const messageGroupStyles = getGroupStyles<At, Ch, Co, Ev, Me, Re, Us>({\n    messagesWithDates,\n    noGroupByUser,\n  });\n  const readData = getReadStates<At, Ch, Co, Ev, Me, Re, Us>(\n    messagesWithDates,\n    readList,\n  );\n\n  const messagesWithDatesList = messagesWithDates.map((msg) => ({\n    ...msg,\n    groupStyles:\n      !isDateSeparator<At, Ch, Co, Ev, Me, Re, Us>(msg) && msg.id\n        ? messageGroupStyles[msg.id] || []\n        : [],\n    readBy:\n      !isDateSeparator<At, Ch, Co, Ev, Me, Re, Us>(msg) && msg.id\n        ? readData[msg.id] || []\n        : [],\n  }));\n  return inverted ? messagesWithDatesList.reverse() : messagesWithDatesList;\n};\n"]}