{"version":3,"sources":["MessageActionSheet.tsx"],"names":["ActionSheetButtonContainer","styled","View","theme","message","actionSheet","buttonContainer","css","ActionSheetButtonText","Text","buttonText","ActionSheetCancelButtonContainer","cancelButtonContainer","ActionSheetCancelButtonText","cancelButtonText","ActionSheetTitleContainer","titleContainer","ActionSheetTitleText","titleText","MessageActionSheet","React","forwardRef","props","actionSheetRef","actionSheetStyles","canDeleteMessage","canEditMessage","handleDelete","handleEdit","messageActions","Object","keys","MESSAGE_ACTIONS","openReactionPicker","openThread","reactionsEnabled","repliesEnabled","setActionSheetVisible","threadList","t","id","title","options","setOptions","newOptions","Array","isArray","indexOf","reactions","splice","reply","edit","prevOptions","onActionPress","action","index","map","option","i","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAIA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAMA,0BAA0B,GAAGC,yBAAOC,IAAV,oBAM5B;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BC,eAA1B,CAA0CC,GAAzD;AAAA,CAN4B,CAAhC;;AASA,IAAMC,qBAAqB,GAAGP,yBAAOQ,IAAV,qBAGvB;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BK,UAA1B,CAAqCH,GAApD;AAAA,CAHuB,CAA3B;;AAMA,IAAMI,gCAAgC,GAAGV,yBAAOC,IAAV,qBAKlC;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BO,qBAA1B,CAAgDL,GAA/D;AAAA,CALkC,CAAtC;;AAQA,IAAMM,2BAA2B,GAAGZ,yBAAOQ,IAAV,qBAG7B;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BS,gBAA1B,CAA2CP,GAA1D;AAAA,CAH6B,CAAjC;;AAMA,IAAMQ,yBAAyB,GAAGd,yBAAOC,IAAV,qBAI3B;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BW,cAA1B,CAAyCT,GAAxD;AAAA,CAJ2B,CAA/B;;AAOA,IAAMU,oBAAoB,GAAGhB,yBAAOQ,IAAV,qBAGtB;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0Ba,SAA1B,CAAoCX,GAAnD;AAAA,CAHsB,CAA1B;;AAyFO,IAAMY,kBAAkB,GAAGC,kBAAMC,UAAN,CAChC,UAACC,KAAD,EAAiCC,cAAjC,EAAoD;AAAA,MAEhDC,iBAFgD,GAc9CF,KAd8C,CAEhDE,iBAFgD;AAAA,MAGhDC,gBAHgD,GAc9CH,KAd8C,CAGhDG,gBAHgD;AAAA,MAIhDC,cAJgD,GAc9CJ,KAd8C,CAIhDI,cAJgD;AAAA,MAKhDC,YALgD,GAc9CL,KAd8C,CAKhDK,YALgD;AAAA,MAMhDC,UANgD,GAc9CN,KAd8C,CAMhDM,UANgD;AAAA,8BAc9CN,KAd8C,CAOhDO,cAPgD;AAAA,MAOhDA,cAPgD,sCAO/BC,MAAM,CAACC,IAAP,CAAYC,sBAAZ,CAP+B;AAAA,MAQhDC,kBARgD,GAc9CX,KAd8C,CAQhDW,kBARgD;AAAA,MAShDC,UATgD,GAc9CZ,KAd8C,CAShDY,UATgD;AAAA,MAUhDC,gBAVgD,GAc9Cb,KAd8C,CAUhDa,gBAVgD;AAAA,MAWhDC,cAXgD,GAc9Cd,KAd8C,CAWhDc,cAXgD;AAAA,MAYhDC,qBAZgD,GAc9Cf,KAd8C,CAYhDe,qBAZgD;AAAA,MAahDC,UAbgD,GAc9ChB,KAd8C,CAahDgB,UAbgD;;AAAA,8BAgBpC,gDAhBoC;AAAA,MAgB1CC,CAhB0C,yBAgB1CA,CAhB0C;;AAAA,kBAiBpB,qBAAS,CAAC;AAAEC,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAAD,CAAT,CAjBoB;AAAA;AAAA,MAiB3CC,OAjB2C;AAAA,MAiBlCC,UAjBkC;;AAmBlD,wBAAU,YAAM;AACd,QAAMC,UAGH,GAAG,EAHN;;AAKA,QAAIC,KAAK,CAACC,OAAN,CAAcjB,cAAd,CAAJ,EAAmC;AACjC,UACEM,gBAAgB,IAChBN,cAAc,CAACkB,OAAf,CAAuBf,uBAAgBgB,SAAvC,IAAoD,CAAC,CAFvD,EAGE;AACAJ,QAAAA,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwB;AACtBT,UAAAA,EAAE,EAAER,uBAAgBgB,SADE;AAEtBP,UAAAA,KAAK,EAAEF,CAAC,CAAC,cAAD;AAFc,SAAxB;AAID;;AAED,UACEH,cAAc,IACdP,cAAc,CAACkB,OAAf,CAAuBf,uBAAgBkB,KAAvC,IAAgD,CAAC,CADjD,IAEA,CAACZ,UAHH,EAIE;AACAM,QAAAA,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwB;AACtBT,UAAAA,EAAE,EAAER,uBAAgBkB,KADE;AAEtBT,UAAAA,KAAK,EAAEF,CAAC,CAAC,OAAD;AAFc,SAAxB;AAID;;AAED,UACEV,cAAc,CAACkB,OAAf,CAAuBf,uBAAgBmB,IAAvC,IAA+C,CAAC,CAAhD,KACAzB,cADA,oBACAA,cAAc,EADd,CADF,EAGE;AACAkB,QAAAA,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwB;AACtBT,UAAAA,EAAE,EAAER,uBAAgBmB,IADE;AAEtBV,UAAAA,KAAK,EAAEF,CAAC,CAAC,cAAD;AAFc,SAAxB;AAID;;AAED,UACEV,cAAc,CAACkB,OAAf,CAAuBf,gCAAvB,IAAiD,CAAC,CAAlD,KACAP,gBADA,oBACAA,gBAAgB,EADhB,CADF,EAGE;AACAmB,QAAAA,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwB;AACtBT,UAAAA,EAAE,EAAER,gCADkB;AAEtBS,UAAAA,KAAK,EAAEF,CAAC,CAAC,gBAAD;AAFc,SAAxB;AAID;AACF;;AAEDI,IAAAA,UAAU,CAAC,UAACS,WAAD;AAAA,2DAAqBA,WAArB,GAAqCR,UAArC;AAAA,KAAD,CAAV;AACD,GAlDD,EAkDG,EAlDH;;AAoDA,MAAMS,aAAa;AAAA,gFAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,4BACZA,MADY;AAAA,8CAEbtB,uBAAgBmB,IAFH,uBAKbnB,gCALa,uBAQbA,uBAAgBkB,KARH,uBAWblB,uBAAgBgB,SAXH;AAAA;;AAAA;AAGhBpB,cAAAA,UAAU;AAHM;;AAAA;AAAA;AAAA,qBAMVD,YAAY,EANF;;AAAA;AAAA;;AAAA;AAShBO,cAAAA,UAAU;AATM;;AAAA;AAYhBD,cAAAA,kBAAkB;AAZF;;AAAA;AAAA;;AAAA;AAiBpBI,cAAAA,qBAAqB,CAAC,KAAD,CAArB;;AAjBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbgB,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAoBA,SACE,gCAAC,yCAAD;AACE,IAAA,iBAAiB,EAAE,CADrB;AAEE,IAAA,sBAAsB,EAAE,CAF1B;AAGE,IAAA,OAAO,EAAE,iBAACE,KAAD;AAAA,aAAWF,aAAa,CAACX,OAAO,CAACa,KAAD,CAAP,CAAef,EAAhB,CAAxB;AAAA,KAHX;AAIE,IAAA,OAAO,EAAEE,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT,EAAe;AAClC,UAAIA,CAAC,KAAK,CAAV,EAAa;AACX,eACE,gCAAC,gCAAD;AAAkC,UAAA,MAAM,EAAC,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,gCAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGnB,CAAC,CAAC,QAAD,CADJ,CADF,CADF;AAOD;;AACD,aACE,gCAAC,0BAAD;AACE,QAAA,GAAG,EAAEkB,MAAM,CAAChB,KADd;AAEE,QAAA,MAAM,yBAAuBgB,MAAM,CAAChB,KAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,gCAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBgB,MAAM,CAAChB,KAA/B,CAJF,CADF;AAQD,KAlBQ,CAJX;AAuBE,IAAA,GAAG,EAAElB,cAvBP;AAwBE,IAAA,MAAM,EAAEC,iBAxBV;AAyBE,IAAA,KAAK,EACH,gCAAC,yBAAD;AAA2B,MAAA,MAAM,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,gCAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBe,CAAC,CAAC,kBAAD,CAAxB,CADF,CA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAiCD,CA7H+B,CAA3B;;;AAgIPpB,kBAAkB,CAACwC,WAAnB,GAAiC,oBAAjC","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ActionSheetCustom as ActionSheet } from 'react-native-actionsheet';\n\nimport type { StyleProp, TextStyle, ViewStyle } from 'react-native';\n\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\nimport { styled } from '../../../styles/styledComponents';\nimport { MESSAGE_ACTIONS } from '../../../utils/utils';\nimport type { Message as InsertDatesMessage } from '../../MessageList/utils/insertDates';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\nimport type { Reaction } from 'src/components/Reaction/ReactionList';\n\nconst ActionSheetButtonContainer = styled.View`\n  align-items: center;\n  background-color: #fff;\n  height: 50px;\n  justify-content: center;\n  width: 100%;\n  ${({ theme }) => theme.message.actionSheet.buttonContainer.css};\n`;\n\nconst ActionSheetButtonText = styled.Text`\n  color: #388cea;\n  font-size: 18px;\n  ${({ theme }) => theme.message.actionSheet.buttonText.css};\n`;\n\nconst ActionSheetCancelButtonContainer = styled.View`\n  align-items: center;\n  height: 50px;\n  justify-content: center;\n  width: 100%;\n  ${({ theme }) => theme.message.actionSheet.cancelButtonContainer.css};\n`;\n\nconst ActionSheetCancelButtonText = styled.Text`\n  color: red;\n  font-size: 18px;\n  ${({ theme }) => theme.message.actionSheet.cancelButtonText.css};\n`;\n\nconst ActionSheetTitleContainer = styled.View`\n  align-items: center;\n  flex: 1;\n  justify-content: center;\n  ${({ theme }) => theme.message.actionSheet.titleContainer.css};\n`;\n\nconst ActionSheetTitleText = styled.Text`\n  color: #757575;\n  font-size: 14px;\n  ${({ theme }) => theme.message.actionSheet.titleText.css};\n`;\n\nexport type ActionSheetStyles = {\n  body?: StyleProp<ViewStyle>;\n  buttonBox?: StyleProp<ViewStyle>;\n  buttonText?: StyleProp<TextStyle>;\n  cancelButtonBox?: StyleProp<ViewStyle>;\n  messageBox?: StyleProp<ViewStyle>;\n  messageText?: StyleProp<TextStyle>;\n  overlay?: StyleProp<TextStyle>;\n  titleBox?: StyleProp<ViewStyle>;\n  titleText?: StyleProp<TextStyle>;\n  wrapper?: StyleProp<ViewStyle>;\n};\n\nexport type MessageActionSheetProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n> = {\n  /**\n   * Handler to delete a current message\n   */\n  handleDelete: () => Promise<void>;\n  /**\n   * Handler to edit a current message. This function sets the current message as the `editing` property of channel context.\n   * The `editing` prop is used by the MessageInput component to switch to edit mode.\n   */\n  handleEdit: () => void;\n  handleReaction: (reactionType: string) => Promise<void>;\n  message: InsertDatesMessage<At, Ch, Co, Ev, Me, Re, Us>;\n  /**\n   * Function that opens the reaction picker\n   */\n  openReactionPicker: () => Promise<void>;\n  /**\n   * Function that opens a thread and gives the option to add a reply on a message\n   */\n  openThread: () => void;\n  /**\n   * Whether or not message reactions are enabled\n   */\n  reactionsEnabled: boolean;\n  /**\n   * The action sheet ref declared in MessageContent. To access the ref, ensure the ActionSheet custom\n   * component is wrapped in `React.forwardRef`.\n   */\n  ref: React.MutableRefObject<ActionSheet | undefined>;\n  /**\n   * Whether or not message replies are enabled\n   */\n  repliesEnabled: boolean;\n  /**\n   * React useState hook setter function that toggles action sheet visibility\n   */\n  setActionSheetVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  supportedReactions: Reaction[];\n  /**\n   * Style object for action sheet (used to style message actions)\n   * Supported styles: https://github.com/beefe/react-native-actionsheet/blob/master/lib/styles.js\n   */\n  actionSheetStyles?: ActionSheetStyles;\n  /**\n   * Function that returns a boolean indicating whether or not the user can delete the message.\n   */\n  canDeleteMessage?: () => boolean | undefined;\n  /**\n   * Function that returns a boolean indicating whether or not the user can edit the message.\n   */\n  canEditMessage?: () => boolean | undefined;\n  /**\n   * Array of allowed actions on message. e.g. ['edit', 'delete', 'reactions', 'reply']\n   * If all the actions need to be disabled, empty array or false should be provided as value of prop.\n   */\n  messageActions?: boolean | string[];\n  /**\n   * Whether or not the MessageList is part of a Thread\n   */\n  threadList?: boolean;\n};\n\nexport const MessageActionSheet = React.forwardRef(\n  (props: MessageActionSheetProps, actionSheetRef) => {\n    const {\n      actionSheetStyles,\n      canDeleteMessage,\n      canEditMessage,\n      handleDelete,\n      handleEdit,\n      messageActions = Object.keys(MESSAGE_ACTIONS),\n      openReactionPicker,\n      openThread,\n      reactionsEnabled,\n      repliesEnabled,\n      setActionSheetVisible,\n      threadList,\n    } = props;\n\n    const { t } = useTranslationContext();\n    const [options, setOptions] = useState([{ id: 'cancel', title: 'Cancel' }]);\n\n    useEffect(() => {\n      const newOptions: {\n        id: string;\n        title: string;\n      }[] = [];\n\n      if (Array.isArray(messageActions)) {\n        if (\n          reactionsEnabled &&\n          messageActions.indexOf(MESSAGE_ACTIONS.reactions) > -1\n        ) {\n          newOptions.splice(1, 0, {\n            id: MESSAGE_ACTIONS.reactions,\n            title: t('Add Reaction'),\n          });\n        }\n\n        if (\n          repliesEnabled &&\n          messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1 &&\n          !threadList\n        ) {\n          newOptions.splice(1, 0, {\n            id: MESSAGE_ACTIONS.reply,\n            title: t('Reply'),\n          });\n        }\n\n        if (\n          messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1 &&\n          canEditMessage?.()\n        ) {\n          newOptions.splice(1, 0, {\n            id: MESSAGE_ACTIONS.edit,\n            title: t('Edit Message'),\n          });\n        }\n\n        if (\n          messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1 &&\n          canDeleteMessage?.()\n        ) {\n          newOptions.splice(1, 0, {\n            id: MESSAGE_ACTIONS.delete,\n            title: t('Delete Message'),\n          });\n        }\n      }\n\n      setOptions((prevOptions) => [...prevOptions, ...newOptions]);\n    }, []);\n\n    const onActionPress = async (action: string) => {\n      switch (action) {\n        case MESSAGE_ACTIONS.edit:\n          handleEdit();\n          break;\n        case MESSAGE_ACTIONS.delete:\n          await handleDelete();\n          break;\n        case MESSAGE_ACTIONS.reply:\n          openThread();\n          break;\n        case MESSAGE_ACTIONS.reactions:\n          openReactionPicker();\n          break;\n        default:\n          break;\n      }\n      setActionSheetVisible(false);\n    };\n\n    return (\n      <ActionSheet\n        cancelButtonIndex={0}\n        destructiveButtonIndex={0}\n        onPress={(index) => onActionPress(options[index].id)}\n        options={options.map((option, i) => {\n          if (i === 0) {\n            return (\n              <ActionSheetCancelButtonContainer testID='cancel-button'>\n                <ActionSheetCancelButtonText>\n                  {t('Cancel')}\n                </ActionSheetCancelButtonText>\n              </ActionSheetCancelButtonContainer>\n            );\n          }\n          return (\n            <ActionSheetButtonContainer\n              key={option.title}\n              testID={`action-sheet-item-${option.title}`}\n            >\n              <ActionSheetButtonText>{option.title}</ActionSheetButtonText>\n            </ActionSheetButtonContainer>\n          );\n        })}\n        ref={actionSheetRef as React.MutableRefObject<ActionSheet>}\n        styles={actionSheetStyles}\n        title={\n          <ActionSheetTitleContainer testID='action-sheet-container'>\n            <ActionSheetTitleText>{t('Choose an action')}</ActionSheetTitleText>\n          </ActionSheetTitleContainer>\n        }\n      />\n    );\n  },\n);\n\nMessageActionSheet.displayName = 'messageActionSheet';\n"]}