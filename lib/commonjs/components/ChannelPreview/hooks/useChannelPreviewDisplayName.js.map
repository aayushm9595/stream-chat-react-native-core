{"version":3,"sources":["useChannelPreviewDisplayName.ts"],"names":["getChannelPreviewDisplayName","channel","client","currentUserId","user","id","channelName","data","name","members","Object","values","state","otherMembers","filter","member","map","join","useChannelPreviewDisplayName","displayName","setDisplayName"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAeA,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CASnCC,OATmC,EAUnCC,MAVmC,EAWhC;AAAA;;AACH,MAAMC,aAAa,GAAGD,MAAH,oCAAGA,MAAM,CAAEE,IAAX,qBAAG,aAAcC,EAApC;AACA,MAAMC,WAAW,GAAGL,OAAH,qCAAGA,OAAO,CAAEM,IAAZ,qBAAG,cAAeC,IAAnC;AAEA,MAAIF,WAAJ,EAAiB,OAAOA,WAAP;AAEjB,MAAMG,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,mBAAAV,OAAO,CAACW,KAAR,oCAAeH,OAAf,KAA0B,EAAxC,CAAhB;AACA,MAAMI,YAAY,GAAGJ,OAAO,CAACK,MAAR,CACnB,UAACC,MAAD;AAAA;;AAAA,WAAY,iBAAAA,MAAM,CAACX,IAAP,kCAAaC,EAAb,MAAoBF,aAAhC;AAAA,GADmB,CAArB;AAGA,MAAMK,IAAI,GAAGK,YAAY,CACtBG,GADU,CACN,UAACD,MAAD;AAAA;;AAAA,WAAY,kBAAAA,MAAM,CAACX,IAAP,mCAAaI,IAAb,uBAAqBO,MAAM,CAACX,IAA5B,qBAAqB,cAAaC,EAAlC,KAAwC,cAApD;AAAA,GADM,EAEVY,IAFU,CAEL,IAFK,CAAb;AAIA,SAAOT,IAAP;AACD,CA1BD;;AA4BO,IAAMU,4BAA4B,GAAG,SAA/BA,4BAA+B,CAS1CjB,OAT0C,EAUvC;AAAA;;AAAA,wBACgB,kCADhB;AAAA,MACKC,MADL,mBACKA,MADL;;AAGH,MAAMG,EAAE,GAAGH,MAAH,qCAAGA,MAAM,CAAEE,IAAX,qBAAG,cAAcC,EAAzB;AACA,MAAMI,OAAO,sBAAGR,OAAO,CAACW,KAAX,qBAAG,gBAAeH,OAA/B;AACA,MAAMD,IAAI,GAAGP,OAAH,sCAAGA,OAAO,CAAEM,IAAZ,qBAAG,eAAeC,IAA5B;;AALG,kBAOmC,qBACpCR,4BAA4B,CAACC,OAAD,EAAUC,MAAV,CADQ,CAPnC;AAAA;AAAA,MAOIiB,WAPJ;AAAA,MAOiBC,cAPjB;;AAWH,wBAAU,YAAM;AACdA,IAAAA,cAAc,CAACpB,4BAA4B,CAACC,OAAD,EAAUC,MAAV,CAA7B,CAAd;AACD,GAFD,EAEG,CAACG,EAAD,EAAKI,OAAL,EAAcD,IAAd,CAFH;AAIA,SAAOW,WAAP;AACD,CA1BM","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { useChatContext } from '../../../contexts/chatContext/ChatContext';\n\nimport type { Channel, StreamChat } from 'stream-chat';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nconst getChannelPreviewDisplayName = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>(\n  channel: Channel<At, Ch, Co, Ev, Me, Re, Us>,\n  client: StreamChat<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const currentUserId = client?.user?.id;\n  const channelName = channel?.data?.name;\n\n  if (channelName) return channelName;\n\n  const members = Object.values(channel.state?.members || {});\n  const otherMembers = members.filter(\n    (member) => member.user?.id !== currentUserId,\n  );\n  const name = otherMembers\n    .map((member) => member.user?.name || member.user?.id || 'Unnamed User')\n    .join(', ');\n\n  return name;\n};\n\nexport const useChannelPreviewDisplayName = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>(\n  channel: Channel<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { client } = useChatContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const id = client?.user?.id;\n  const members = channel.state?.members;\n  const name = channel?.data?.name;\n\n  const [displayName, setDisplayName] = useState(\n    getChannelPreviewDisplayName(channel, client),\n  );\n\n  useEffect(() => {\n    setDisplayName(getChannelPreviewDisplayName(channel, client));\n  }, [id, members, name]);\n\n  return displayName;\n};\n"]}