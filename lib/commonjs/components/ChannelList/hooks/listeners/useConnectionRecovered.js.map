{"version":3,"sources":["useConnectionRecovered.ts"],"names":["useConnectionRecovered","setForceUpdate","client","handleEvent","count","on","off"],"mappings":";;;;;AAAA;;AAEA;;AAiBO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,OAUpB;AAAA,MADhBC,cACgB,QADhBA,cACgB;;AAAA,wBACG,kCADH;AAAA,MACRC,MADQ,mBACRA,MADQ;;AAGhB,wBAAU,YAAM;AACd,QAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,MAAAA,cAAc,CAAC,UAACG,KAAD;AAAA,eAAWA,KAAK,GAAG,CAAnB;AAAA,OAAD,CAAd;AACD,KAFD;;AAIAF,IAAAA,MAAM,CAACG,EAAP,CAAU,sBAAV,EAAkCF,WAAlC;AACA,WAAO;AAAA,aAAMD,MAAM,CAACI,GAAP,CAAW,sBAAX,EAAmCH,WAAnC,CAAN;AAAA,KAAP;AACD,GAPD,EAOG,EAPH;AAQD,CArBM","sourcesContent":["import { useEffect } from 'react';\n\nimport { useChatContext } from '../../../../contexts/chatContext/ChatContext';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../../types/types';\n\ntype Parameters = {\n  setForceUpdate: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const useConnectionRecovered = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType\n>({\n  setForceUpdate,\n}: Parameters) => {\n  const { client } = useChatContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  useEffect(() => {\n    const handleEvent = () => {\n      setForceUpdate((count) => count + 1);\n    };\n\n    client.on('connection.recovered', handleEvent);\n    return () => client.off('connection.recovered', handleEvent);\n  }, []);\n};\n"]}