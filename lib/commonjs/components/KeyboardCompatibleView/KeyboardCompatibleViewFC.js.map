{"version":3,"sources":["KeyboardCompatibleViewFC.tsx"],"names":["KeyboardCompatibleView","behavior","Platform","OS","children","contentContainerStyle","enabled","keyboardVerticalOffset","style","props","frame","initialFrameHeight","keyboardEvent","subscriptions","viewRef","AppState","currentState","appState","setAppState","bottom","setBottom","isKeyboardOpen","setIsKeyboardOpen","handleAppStateChange","nextAppState","match","setKeyboardListeners","unsetKeyboardListeners","onKeyboardChange","event","current","Keyboard","addListener","forEach","subscription","remove","addEventListener","removeEventListener","updateBottomIfNecessary","dismissKeyboard","Promise","resolve","dismiss","onLayout","nativeEvent","layout","height","relativeKeyboardHeight","keyboardFrame","keyboardY","screenY","Math","max","y","duration","easing","endCoordinates","LayoutAnimation","configureNext","update","type","Types","bottomHeight","heightStyle","flex","StyleSheet","compose","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  AppState,\n  AppStateStatus,\n  EmitterSubscription,\n  Keyboard,\n  KeyboardAvoidingViewProps,\n  KeyboardEvent,\n  KeyboardEventListener,\n  LayoutAnimation,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  ScreenRect,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { KeyboardProvider } from '../../contexts/keyboardContext/KeyboardContext';\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n *\n * Following piece of code has been mostly copied from KeyboardAvoidingView component, with few additional tweaks.\n */\nexport const KeyboardCompatibleView: React.FC<KeyboardAvoidingViewProps> = ({\n  behavior = Platform.OS === 'ios' ? 'padding' : 'position',\n  children,\n  contentContainerStyle,\n  enabled = true,\n  keyboardVerticalOffset = 66.5,\n  style,\n  ...props\n}) => {\n  const frame = useRef<LayoutRectangle>();\n  const initialFrameHeight = useRef(0);\n  const keyboardEvent = useRef<KeyboardEvent>();\n  const subscriptions = useRef<EmitterSubscription[]>([]);\n  const viewRef = useRef<View | null>(null);\n\n  const [appState, setAppState] = useState<AppStateStatus>(\n    AppState.currentState,\n  );\n  const [bottom, setBottom] = useState(0);\n  const [isKeyboardOpen, setIsKeyboardOpen] = useState(false);\n\n  useEffect(() => {\n    const handleAppStateChange = (nextAppState: AppStateStatus) => {\n      if (appState.match(/inactive|background/) && nextAppState === 'active') {\n        setKeyboardListeners();\n      }\n\n      if (nextAppState.match(/inactive|background/)) {\n        unsetKeyboardListeners();\n      }\n\n      setAppState(nextAppState);\n    };\n\n    const onKeyboardChange: KeyboardEventListener = (event) => {\n      keyboardEvent.current = event;\n    };\n\n    const setKeyboardListeners = () => {\n      if (Platform.OS === 'ios') {\n        subscriptions.current = [\n          Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange),\n          Keyboard.addListener('keyboardDidHide', () => {\n            setIsKeyboardOpen(false);\n          }),\n          Keyboard.addListener('keyboardDidShow', () => {\n            setIsKeyboardOpen(true);\n          }),\n        ];\n      } else {\n        subscriptions.current = [\n          Keyboard.addListener('keyboardDidHide', (event) => {\n            onKeyboardChange(event);\n            setIsKeyboardOpen(false);\n          }),\n          Keyboard.addListener('keyboardDidShow', (event) => {\n            onKeyboardChange(event);\n            setIsKeyboardOpen(true);\n          }),\n        ];\n      }\n    };\n\n    const unsetKeyboardListeners = () => {\n      subscriptions.current.forEach((subscription) => {\n        subscription.remove();\n      });\n    };\n\n    AppState.addEventListener('change', handleAppStateChange);\n    setKeyboardListeners();\n\n    return () => {\n      AppState.removeEventListener('change', handleAppStateChange);\n      unsetKeyboardListeners();\n    };\n  }, []);\n\n  useEffect(() => {\n    updateBottomIfNecessary();\n  }, [keyboardEvent.current]);\n\n  const dismissKeyboard = () => {\n    if (!isKeyboardOpen) {\n      return;\n    }\n\n    return new Promise((resolve) => {\n      const subscription = Keyboard.addListener('keyboardDidHide', () => {\n        resolve();\n        subscription.remove();\n      });\n\n      Keyboard.dismiss();\n    });\n  };\n\n  const onLayout: (event: LayoutChangeEvent) => void = (event) => {\n    frame.current = event.nativeEvent.layout;\n    if (!initialFrameHeight.current) {\n      // save the initial frame height, before the keyboard is visible\n      initialFrameHeight.current = frame.current.height;\n    }\n\n    updateBottomIfNecessary();\n  };\n\n  const relativeKeyboardHeight = (keyboardFrame: ScreenRect) => {\n    if (!frame.current || !keyboardFrame) {\n      return 0;\n    }\n\n    const keyboardY = keyboardFrame.screenY - keyboardVerticalOffset;\n\n    // Calculate the displacement needed for the view such that it\n    // no longer overlaps with the keyboard\n    return Math.max(frame.current.y + frame.current.height - keyboardY, 0);\n  };\n\n  const updateBottomIfNecessary = () => {\n    if (!keyboardEvent.current) {\n      setBottom(0);\n      return;\n    }\n\n    const { duration, easing, endCoordinates } = keyboardEvent.current;\n    const height = relativeKeyboardHeight(endCoordinates);\n\n    if (bottom === height) {\n      return;\n    }\n\n    if (duration && easing) {\n      LayoutAnimation.configureNext({\n        // We have to pass the duration equal to minimal accepted duration defined here: RCTLayoutAnimation.m\n        duration: duration > 10 ? duration : 10,\n        update: {\n          duration: duration > 10 ? duration : 10,\n          type: LayoutAnimation.Types[easing] || 'keyboard',\n        },\n      });\n    }\n    setBottom(height);\n  };\n\n  const bottomHeight = enabled ? bottom : 0;\n  switch (behavior) {\n    case 'height':\n      // eslint-disable-next-line no-case-declarations\n      let heightStyle;\n      if (frame.current && bottom > 0) {\n        // Note that we only apply a height change when there is keyboard present,\n        // i.e. this.state.bottom is greater than 0. If we remove that condition,\n        // this.frame.height will never go back to its original value.\n        // When height changes, we need to disable flex.\n        heightStyle = {\n          flex: 0,\n          height: initialFrameHeight.current - bottomHeight,\n        };\n      }\n      return (\n        <KeyboardProvider value={{ dismissKeyboard }}>\n          <View\n            onLayout={onLayout}\n            ref={viewRef}\n            style={StyleSheet.compose(style, heightStyle)}\n            {...props}\n          >\n            {children}\n          </View>\n        </KeyboardProvider>\n      );\n\n    case 'position':\n      return (\n        <KeyboardProvider value={{ dismissKeyboard }}>\n          <View onLayout={onLayout} ref={viewRef} style={style} {...props}>\n            <View\n              style={StyleSheet.compose(contentContainerStyle, {\n                bottom: bottomHeight,\n              })}\n            >\n              {children}\n            </View>\n          </View>\n        </KeyboardProvider>\n      );\n\n    case 'padding':\n      return (\n        <KeyboardProvider value={{ dismissKeyboard }}>\n          <View\n            onLayout={onLayout}\n            ref={viewRef}\n            style={StyleSheet.compose(style, { paddingBottom: bottomHeight })}\n            {...props}\n          >\n            {children}\n          </View>\n        </KeyboardProvider>\n      );\n\n    default:\n      return (\n        <KeyboardProvider value={{ dismissKeyboard }}>\n          <View onLayout={onLayout} ref={viewRef} style={style} {...props}>\n            {children}\n          </View>\n        </KeyboardProvider>\n      );\n  }\n};\n"]}