{"version":3,"sources":["FileUploadPreview.tsx"],"names":["closeRound","require","FILE_PREVIEW_HEIGHT","FILE_PREVIEW_PADDING","AttachmentContainerView","styled","View","theme","messageInput","fileUploadPreview","attachmentContainerView","css","AttachmentView","attachmentView","Container","fileUploadsLength","container","Dismiss","TouchableOpacity","dismiss","DismissImage","Image","dismissImage","FilenameText","Text","filenameText","FileUploadPreview","props","AttachmentFileIcon","FileIcon","fileUploads","removeFile","retryUpload","renderItem","item","newFile","state","FileState","UPLOADED","UPLOADING","ProgressIndicatorTypes","IN_PROGRESS","UPLOAD_FAILED","RETRY","undefined","file","type","name","length","substring","concat","id","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FlatList, ImageRequireSource } from 'react-native';\n\nimport { UploadProgressIndicator } from './UploadProgressIndicator';\n\nimport type { FileUpload } from './hooks/useMessageDetailsForState';\n\nimport { FileIcon, FileIconProps } from '../Attachment/FileIcon';\n\nimport { styled } from '../../styles/styledComponents';\nimport { FileState, ProgressIndicatorTypes } from '../../utils/utils';\n\nconst closeRound: ImageRequireSource = require('../../images/icons/close-round.png');\n\nconst FILE_PREVIEW_HEIGHT = 50;\nconst FILE_PREVIEW_PADDING = 10;\n\nconst AttachmentContainerView = styled.View`\n  align-items: center;\n  border-color: #ebebeb;\n  border-width: 0.5px;\n  flex-direction: row;\n  height: ${FILE_PREVIEW_HEIGHT}px;\n  justify-content: space-between;\n  margin-bottom: 5px;\n  padding: ${FILE_PREVIEW_PADDING}px;\n  ${({ theme }) =>\n    theme.messageInput.fileUploadPreview.attachmentContainerView.css};\n`;\n\nconst AttachmentView = styled.View`\n  align-items: center;\n  flex-direction: row;\n  ${({ theme }) => theme.messageInput.fileUploadPreview.attachmentView.css};\n`;\n\nconst Container = styled.View<{ fileUploadsLength: number }>`\n  height: ${({ fileUploadsLength }) =>\n    fileUploadsLength * (FILE_PREVIEW_HEIGHT + 5)}px;\n  margin-horizontal: 10px;\n  ${({ theme }) => theme.messageInput.fileUploadPreview.container.css};\n`;\n\nconst Dismiss = styled.TouchableOpacity`\n  align-items: center;\n  background-color: #fff;\n  border-radius: 20px;\n  height: 20px;\n  justify-content: center;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  width: 20px;\n  ${({ theme }) => theme.messageInput.fileUploadPreview.dismiss.css};\n`;\n\nconst DismissImage = styled.Image`\n  height: 10px;\n  width: 10px;\n  ${({ theme }) => theme.messageInput.fileUploadPreview.dismissImage.css};\n`;\n\nconst FilenameText = styled.Text`\n  padding-left: 10px;\n  ${({ theme }) => theme.messageInput.fileUploadPreview.filenameText.css};\n`;\n\nexport type FileUploadPreviewProps = {\n  /**\n   * An array of file objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  fileUploads: FileUpload[];\n  /**\n   * Function for removing a file from the upload preview\n   *\n   * @param id string ID of file in `fileUploads` object in state of MessageInput\n   */\n  removeFile: (id: string) => void;\n  /**\n   * Function for attempting to upload a file\n   *\n   * @param id string ID of file in `fileUploads` object in state of MessageInput\n   */\n  retryUpload: ({ newFile }: { newFile: FileUpload }) => Promise<void>;\n  /**\n   * Custom UI component for attachment icon for type 'file' attachment.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/FileIcon.tsx\n   */\n  AttachmentFileIcon?: React.ComponentType<FileIconProps>;\n};\n\n/**\n * FileUploadPreview\n * UI Component to preview the files set for upload\n *\n * @example ./FileUploadPreview.md\n */\nexport const FileUploadPreview: React.FC<FileUploadPreviewProps> = (props) => {\n  const {\n    AttachmentFileIcon = FileIcon,\n    fileUploads,\n    removeFile,\n    retryUpload,\n  } = props;\n\n  const renderItem = ({ item }: { item: FileUpload }) => (\n    <>\n      <UploadProgressIndicator\n        action={() => {\n          if (retryUpload) {\n            retryUpload({ newFile: item });\n          }\n        }}\n        active={item.state !== FileState.UPLOADED}\n        type={\n          item.state === FileState.UPLOADING\n            ? ProgressIndicatorTypes.IN_PROGRESS\n            : item.state === FileState.UPLOAD_FAILED\n            ? ProgressIndicatorTypes.RETRY\n            : undefined\n        }\n      >\n        <AttachmentContainerView>\n          <AttachmentView>\n            <AttachmentFileIcon mimeType={item.file.type} size={20} />\n            <FilenameText>\n              {item.file.name\n                ? item.file.name.length > 35\n                  ? item.file.name.substring(0, 35).concat('...')\n                  : item.file.name\n                : ''}\n            </FilenameText>\n          </AttachmentView>\n        </AttachmentContainerView>\n      </UploadProgressIndicator>\n      <Dismiss\n        onPress={() => {\n          if (removeFile) {\n            removeFile(item.id);\n          }\n        }}\n        testID='remove-file-upload-preview'\n      >\n        <DismissImage source={closeRound} />\n      </Dismiss>\n    </>\n  );\n\n  return fileUploads?.length > 0 ? (\n    <Container fileUploadsLength={fileUploads.length}>\n      <FlatList\n        data={fileUploads}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItem}\n        style={{ flex: 1 }}\n      />\n    </Container>\n  ) : null;\n};\n"]}