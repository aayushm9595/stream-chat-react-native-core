{"version":3,"sources":["Attachment.tsx"],"names":["Attachment","props","actionHandler","alignment","attachment","AttachmentActions","DefaultAttachmentActions","AttachmentFileIcon","DefaultFileIcon","Card","DefaultCard","CardCover","CardFooter","CardHeader","FileAttachment","DefaultFileAttachment","Gallery","DefaultGallery","GiphyProps","Giphy","groupStyle","UrlPreviewProps","UrlPreview","cardProps","Cover","undefined","Footer","Header","hasAttachmentActions","actions","length","type","id","title_link","og_scrape_url","image_url","thumb_url","asset_url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  AttachmentActionsProps,\n  AttachmentActions as DefaultAttachmentActions,\n} from './AttachmentActions';\nimport { CardProps, Card as DefaultCard } from './Card';\nimport {\n  FileAttachment as DefaultFileAttachment,\n  FileAttachmentProps,\n} from './FileAttachment';\nimport { FileIcon as DefaultFileIcon, FileIconProps } from './FileIcon';\nimport { Gallery as DefaultGallery, GalleryProps } from './Gallery';\n\nimport type { Attachment as AttachmentType } from 'stream-chat';\n\nimport type { FileAttachmentGroupProps } from './FileAttachmentGroup';\nimport type {\n  Alignment,\n  GroupType,\n} from '../../contexts/messagesContext/MessagesContext';\nimport type { DefaultAttachmentType, UnknownType } from '../../types/types';\n\nexport type ActionHandler = (name: string, value: string) => void;\n\nexport type AttachmentProps<At extends UnknownType = DefaultAttachmentType> = {\n  /**\n   * The attachment to render\n   */\n  attachment: AttachmentType<At>;\n  /**\n   * Handler for actions. Actions in combination with attachments can be used to build [commands](https://getstream.io/chat/docs/#channel_commands).\n   */\n  actionHandler?: ActionHandler;\n  /**\n   * Position of the message, either 'right' or 'left'\n   */\n  alignment?: Alignment;\n  /**\n   * Custom UI component to display attachment actions. e.g., send, shuffle, cancel in case of giphy\n   * Defaults to https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/AttachmentActions.tsx\n   */\n  AttachmentActions?: React.ComponentType<AttachmentActionsProps<At>>;\n  /**\n   * Custom UI component for attachment icon for type 'file' attachment.\n   * Defaults to: https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/FileIcon.tsx\n   */\n  AttachmentFileIcon?: React.ComponentType<FileIconProps>;\n  /**\n   * Custom UI component to display generic media type e.g. giphy, url preview etc\n   * Defaults to https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/Card.tsx\n   */\n  Card?: React.ComponentType<CardProps<At>>;\n  /**\n   * Custom UI component to override default cover (between Header and Footer) of Card component.\n   * Accepts the same props as Card component.\n   */\n  CardCover?: React.ComponentType<CardProps<At>>;\n  /**\n   * Custom UI component to override default Footer of Card component.\n   * Accepts the same props as Card component.\n   */\n  CardFooter?: React.ComponentType<CardProps<At>>;\n  /**\n   * Custom UI component to override default header of Card component.\n   * Accepts the same props as Card component.\n   */\n  CardHeader?: React.ComponentType<CardProps<At>>;\n  /**\n   * Custom UI component to display File type attachment.\n   * Defaults to https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/FileAttachment.tsx\n   */\n  FileAttachment?: React.ComponentType<FileAttachmentProps<At>>;\n  /**\n   * Custom UI component to display group of File type attachments or multiple file attachments (in single message).\n   * Defaults to https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/FileAttachmentGroup.tsx\n   */\n  FileAttachmentGroup?: React.ComponentType<FileAttachmentGroupProps<At>>;\n  /**\n   * Custom UI component to display image attachments.\n   * Defaults to https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/Gallery.tsx\n   */\n  Gallery?: React.ComponentType<GalleryProps<At>>;\n  /**\n   * Custom UI component to display Giphy image.\n   * Defaults to https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/Card.tsx\n   */\n  Giphy?: React.ComponentType<CardProps<At>>;\n  /**\n   * Position of message in group - top, bottom, middle, single.\n   *\n   * Message group is a group of consecutive messages from same user. groupStyles can be used to style message as per their position in message group\n   * e.g., user avatar (to which message belongs to) is only showed for last (bottom) message in group.\n   */\n  groupStyle?: GroupType;\n  /**\n   * Custom UI component to display enriched url preview.\n   * Defaults to https://github.com/GetStream/stream-chat-react-native/blob/master/src/components/Attachment/Card.tsx\n   */\n  UrlPreview?: React.ComponentType<CardProps<At>>;\n};\n\n/**\n * Attachment - The message attachment\n *\n * @example ./Attachment.md\n */\nexport const Attachment = <At extends UnknownType = DefaultAttachmentType>(\n  props: AttachmentProps<At>,\n) => {\n  const {\n    actionHandler,\n    alignment = 'right',\n    attachment,\n    AttachmentActions = DefaultAttachmentActions,\n    AttachmentFileIcon = DefaultFileIcon,\n    Card = DefaultCard,\n    CardCover,\n    CardFooter,\n    CardHeader,\n    FileAttachment = DefaultFileAttachment,\n    Gallery = DefaultGallery,\n    Giphy: GiphyProps,\n    groupStyle,\n    UrlPreview: UrlPreviewProps,\n  } = props;\n\n  if (!attachment) {\n    return null;\n  }\n\n  const Giphy = GiphyProps || Card;\n  const UrlPreview = UrlPreviewProps || Card;\n  const cardProps = {\n    Cover: CardCover ? CardCover : undefined,\n    Footer: CardFooter ? CardFooter : undefined,\n    Header: CardHeader ? CardHeader : undefined,\n  };\n\n  const hasAttachmentActions = !!attachment.actions?.length;\n\n  if (attachment.type === 'giphy' || attachment.type === 'imgur') {\n    if (hasAttachmentActions) {\n      return (\n        <View>\n          <Giphy<At> alignment={alignment} {...attachment} {...cardProps} />\n          <AttachmentActions<At>\n            actionHandler={actionHandler}\n            key={`key-actions-${attachment.id}`}\n            {...attachment}\n          />\n        </View>\n      );\n    } else {\n      return <Giphy<At> alignment={alignment} {...attachment} {...cardProps} />;\n    }\n  }\n\n  if (\n    (attachment.title_link || attachment.og_scrape_url) &&\n    (attachment.image_url || attachment.thumb_url)\n  ) {\n    return (\n      <UrlPreview<At> alignment={alignment} {...attachment} {...cardProps} />\n    );\n  }\n\n  if (attachment.type === 'image') {\n    return (\n      <>\n        <Gallery<At> alignment={alignment} images={[attachment]} />\n        {hasAttachmentActions && (\n          <AttachmentActions<At>\n            actionHandler={actionHandler}\n            key={`key-actions-${attachment.id}`}\n            {...attachment}\n          />\n        )}\n      </>\n    );\n  }\n\n  if (attachment.type === 'file' || attachment.type === 'audio') {\n    return (\n      <FileAttachment<At>\n        actionHandler={actionHandler}\n        alignment={alignment}\n        attachment={attachment}\n        AttachmentActions={AttachmentActions}\n        AttachmentFileIcon={AttachmentFileIcon}\n        groupStyle={groupStyle}\n      />\n    );\n  }\n\n  if (\n    attachment.type === 'video' &&\n    attachment.asset_url &&\n    attachment.image_url\n  ) {\n    return (\n      // TODO: Put in video component\n      <Card<At> alignment={alignment} {...attachment} {...cardProps} />\n    );\n  }\n\n  if (hasAttachmentActions) {\n    return (\n      <View>\n        <Card<At> alignment={alignment} {...attachment} {...cardProps} />\n        <AttachmentActions<At>\n          actionHandler={actionHandler}\n          key={`key-actions-${attachment.id}`}\n          {...attachment}\n        />\n      </View>\n    );\n  } else {\n    return <Card<At> alignment={alignment} {...attachment} />;\n  }\n};\n"]}