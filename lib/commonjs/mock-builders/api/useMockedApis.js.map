{"version":3,"sources":["useMockedApis.js"],"names":["useMockedApis","client","apiResponses","forEach","response","type","jest","spyOn","axiosInstance","mockImplementation","mockResolvedValue"],"mappings":";;;;;AASO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,YAAT,EAA0B;AACrDA,EAAAA,YAAY,CAACC,OAAb,CAAqB,gBAAwB;AAAA,QAArBC,QAAqB,QAArBA,QAAqB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC3CC,IAAAA,IAAI,CACDC,KADH,CACSN,MAAM,CAACO,aADhB,EAC+BH,IAD/B,EAEGI,kBAFH,GAGGC,iBAHH,CAGqBN,QAHrB;AAID,GALD;AAMD,CAPM","sourcesContent":["/**\n * Hook to mock the calls made through axios module.\n * You should provide the responses of Apis in order that they will be called.\n * You should use api functions from current directory to build these responses.\n * e.g., queryChannelsApi, sendMessageApi\n *\n * @param {StreamClient} client\n * @param {*} apiResponses\n */\nexport const useMockedApis = (client, apiResponses) => {\n  apiResponses.forEach(({ response, type }) => {\n    jest\n      .spyOn(client.axiosInstance, type)\n      .mockImplementation()\n      .mockResolvedValue(response);\n  });\n};\n"]}